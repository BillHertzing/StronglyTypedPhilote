<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <DefaultItemExcludes>SerializationFixture.Newtonsoft.cs;$(DefaultItemExcludes)</DefaultItemExcludes>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks>net5.0;</TargetFrameworks>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <IsPackable>false</IsPackable>
    <!-- Assembly, File, and Package Information for this assembly-->
    <!-- Build and revision are created based on date-->
    <MajorVersion>1</MajorVersion>
    <MinorVersion>0</MinorVersion>
    <PatchVersion>0</PatchVersion>
    <!-- Current Lifecycle stage for this assembly-->
    <PackageLifeCycleStage>Production</PackageLifeCycleStage>
    <!-- NuGet Package Label for the Nuget Package if the LifeCyclestage is not Production-->
    <PackageLabel>NA</PackageLabel>
  </PropertyGroup>

  <!-- Packages to add xUnit Testing providers and extensions -->
  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="FluentAssertions" />
    <PackageReference Include="Moq" />
    <PackageReference Include="xunit" />
    <PackageReference Include="Xunit.DependencyInjection" />
    <PackageReference Include="xunit.runner.console">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="xunit.runner.visualstudio">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <!-- Packages to add xUnit Testing dotnet tool -->
  <ItemGroup>
    <DotNetCliToolReference Include="dotnet-xunit" />
  </ItemGroup>

    <!-- Standalone reference to Microsoft.Extensions.DependencyInjection is used by unitTest projects
            that inject a Serializer via Dependency Injection-->
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
  </ItemGroup>

  <!-- ToDo: Copy specified DLLs and PDFs of specific Shim assemblies for Serializer to inject -->
    <!-- Copy all Serialization libraries for the ISerializer DI-injected service to the outputdir-->
  <ItemGroup>
  <!--
    <ProjectReference Include="..\ATAP.Utilities.Serializer.Shim.NewtonsoftJson\ATAP.Utilities.Serializer.Shim.NewtonsoftJson.csproj" />
    <ProjectReference Include="..\ATAP.Utilities.Serializer.Shim.ServiceStackJson\ATAP.Utilities.Serializer.Shim.ServiceStackJson.csproj" />
    <ProjectReference Include="..\ATAP.Utilities.Serializer.Shim.SystemTextJson\ATAP.Utilities.Serializer.Shim.SystemTextJson.csproj" />
    -->
  </ItemGroup>



    <ItemGroup>
    <ProjectReference Include="..\..\src\ATAP.Utilities.StronglyTypedIds\ATAP.Utilities.StronglyTypedIds.csproj" />
    <ProjectReference Include="..\..\src\ATAP.Utilities.StronglyTypedIds.Interfaces\ATAP.Utilities.StronglyTypedIds.Interfaces.csproj" />
    <ProjectReference Include="..\..\src\ATAP.Utilities.StronglyTypedIds.JsonConverter.Shim.SystemTextJson\ATAP.Utilities.StronglyTypedIds.JsonConverter.Shim.SystemTextJson.csproj" />
    <ProjectReference Include="..\..\src\ATAP.Utilities.StronglyTypedIds.JsonConverter.Shim.Newtonsoft\ATAP.Utilities.StronglyTypedIds.JsonConverter.Shim.Newtonsoft.csproj" />
  </ItemGroup>

</Project>

